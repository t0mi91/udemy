1
00:00:02,430 --> 00:00:04,690
Let's move on to the project grid.

2
00:00:05,680 --> 00:00:12,669
Something that we see a lot of in websites whether
it's an image gallery or a list of your portfolio

3
00:00:12,670 --> 00:00:13,790
projects.

4
00:00:14,110 --> 00:00:17,450
Grid systems are very
important and very common.

5
00:00:17,590 --> 00:00:24,700
And as we know we learned the perfect
way to create a grid CSS grid, right.

6
00:00:24,740 --> 00:00:26,330
So let's see how this will look like.

7
00:00:26,480 --> 00:00:29,010
And my ideal implementation.

8
00:00:29,150 --> 00:00:35,340
First I want to go to the HTML page and
now let's make this a little bit bigger.

9
00:00:37,080 --> 00:00:45,149
In our project grid div I know I want to use CSS grid
so I'm going to create a wrapper around this project

10
00:00:45,150 --> 00:00:48,770
grid so I'm going to have a div

11
00:00:52,410 --> 00:00:59,879
and this div will have a class of some properties
that we'll add CSS to and just to keep things blue

12
00:00:59,880 --> 00:01:00,610
the way they are.

13
00:01:00,630 --> 00:01:06,599
I'm going to give it that zone blue class that we
have below but we're going to make it a CSS grid

14
00:01:06,600 --> 00:01:10,630
song going to just say grid-wrapper.

15
00:01:11,210 --> 00:01:14,610
And we can just remove the project grid.

16
00:01:16,000 --> 00:01:21,040
And in here add a couple
of sample little projects.

17
00:01:21,190 --> 00:01:28,940
If you remember in our solution file I left for you
a couple of images that you can just add like this

18
00:01:29,010 --> 00:01:32,830
so that we have some
sort of a project grid.

19
00:01:33,020 --> 00:01:37,620
I'm not going to bore you with me typing all that out
because that's something that we've done before.

20
00:01:37,730 --> 00:01:45,829
Just gonna copy and paste a div here with box zone
boxes are classes that we haven't added yet but we're

21
00:01:45,830 --> 00:01:53,099
going to create these are going to be the grid items
we have zone which again is something that we've

22
00:01:53,100 --> 00:01:57,590
already defined before and our images.

23
00:01:57,600 --> 00:02:02,769
So if I save this and refresh
and let's refresh again.

24
00:02:02,770 --> 00:02:03,280
All right.

25
00:02:03,310 --> 00:02:10,890
This is absolutely hideous does not look pretty at
all but at least we have the images provide it but

26
00:02:11,100 --> 00:02:13,979
no employer is going to be
impressed if they see this right.

27
00:02:13,980 --> 00:02:16,720
So let's actually make
this into a grid system.

28
00:02:18,320 --> 00:02:28,809
If we go back to the style tab let's add our grid
here and obviously as the name suggests when it comes

29
00:02:28,810 --> 00:02:31,600
to grids CSS grids is the way to go.

30
00:02:32,020 --> 00:02:35,890
And there's many ways that we can lay things out and
that's something that we've already talked about

31
00:02:35,910 --> 00:02:37,760
in our CSS grid videos.

32
00:02:38,020 --> 00:02:40,370
So we're going to keep things simple.

33
00:02:40,420 --> 00:02:44,820
First is we want to actually say
hey we're going to use CSS grid.

34
00:02:44,920 --> 00:02:53,380
So we're going to use the grid-wrapper class that we
created which was this div that wraps all our projects

35
00:02:55,740 --> 00:03:08,429
and we'll say display grid we'll say that we want
the grid-gap to be 20px and then finally the our

36
00:03:08,430 --> 00:03:16,730
favorite property that is grid-template-columns
and so everything is responsive.

37
00:03:16,800 --> 00:03:30,150
We'll say repeat auto-fill and we'll say
that the minmax will be let's say 350px.

38
00:03:30,220 --> 00:03:37,389
So that is the minimum and the maximum will be '1fr'
so that it fills the entire page when it's really

39
00:03:37,390 --> 00:03:38,390
really small.

40
00:03:39,740 --> 00:03:48,179
So that if I save this and refresh. All right.
That still looks pretty hideous doesn't it.

41
00:03:48,180 --> 00:03:53,789
And that's because our images are well they're
pretty massive and you see that they're also not all

42
00:03:53,790 --> 00:03:56,660
the same size or they
have different padding.

43
00:03:56,730 --> 00:04:04,079
So the way to just fix that quickly and something
that you'll see a lot with images is to give them

44
00:04:04,080 --> 00:04:14,489
a width of 100 percent in our case that we can just
say box because remember each div has a box class

45
00:04:14,490 --> 00:04:16,400
that we haven't really said anything about.

46
00:04:16,560 --> 00:04:17,990
And then an image.

47
00:04:18,030 --> 00:04:26,229
So using our CSS selector knowledge I can just say
all children of box that are images I want the

48
00:04:26,230 --> 00:04:34,550
width to be 100 percent.
If I save and refresh.

49
00:04:34,570 --> 00:04:34,990
All right.

50
00:04:34,990 --> 00:04:35,770
That's perfect.

51
00:04:35,771 --> 00:04:42,930
Now you see that each image has 100 percent width
that as it fills in the entire piece of the card.

52
00:04:43,720 --> 00:04:53,260
And if I make this bigger and smaller you see that
it adjusts very very cool but still pretty ugly.

53
00:04:54,340 --> 00:04:57,780
But we have the CSS grid
working as you can see.

54
00:04:58,120 --> 00:05:04,090
As soon as it's less than 350px
it changes the grid system.

55
00:05:06,830 --> 00:05:09,640
So next we want to work
on the individual cards.

56
00:05:09,920 --> 00:05:18,180
That is we want to have our box and here we don't
really need to add any extra grid properties.

57
00:05:18,190 --> 00:05:22,539
I mean we could if we want but I like the way
things look I like everything being symmetrical.

58
00:05:22,540 --> 00:05:26,349
I want all the items in
the grid to be the same.

59
00:05:26,350 --> 00:05:36,569
So in here we can just add our simple CSS properties
like let's say background color and we'll just

60
00:05:36,570 --> 00:05:44,309
give it a color of let's say '#444' so that we
have this dark color and we definitely don't

61
00:05:44,310 --> 00:05:46,760
want these images just to be this big.

62
00:05:47,250 --> 00:05:55,440
So we'll give it a padding of 130px
and maybe some margin as well of 20px.

63
00:05:55,710 --> 00:05:59,900
If I save and refresh that's a lot better.

64
00:05:59,990 --> 00:06:04,880
And remember because we said that the
width of the image is 100 percent.

65
00:06:05,300 --> 00:06:07,980
It's going to try and fill the entire box.

66
00:06:08,060 --> 00:06:15,740
But because the box now has padding of 130 both the
top the bottom and to the left and right the width

67
00:06:15,770 --> 00:06:18,040
is now just this part.

68
00:06:18,080 --> 00:06:19,290
So that looks a lot better.

69
00:06:20,590 --> 00:06:26,800
And if we look over here we now
have a completely responsive

70
00:06:29,470 --> 00:06:30,540
grid system.

71
00:06:30,550 --> 00:06:31,850
How cool is that!

72
00:06:32,290 --> 00:06:35,040
And how simple was that using CSS grid.

73
00:06:35,530 --> 00:06:40,020
Luckily for us the last thing
we need to do is this footer.

74
00:06:40,390 --> 00:06:44,610
And because the footer is at the very bottom
it just going to stay at the very bottom.

75
00:06:44,860 --> 00:06:50,829
The only thing that we might want to do is to make
sure that the text is centered so in our case we

76
00:06:50,830 --> 00:06:54,070
can just say footer and as you guessed.

77
00:06:54,170 --> 00:06:56,090
Yes it's text-align.

78
00:06:56,200 --> 00:06:57,710
Our best friend.

79
00:06:57,720 --> 00:07:05,240
Center. If I refresh and make sure that
I spelled properly if I save and refresh.

80
00:07:05,540 --> 00:07:13,040
Well that's not going to work because we should
change our footer which is div to more of a semantic

81
00:07:13,270 --> 00:07:15,500
a HTML tag of footer.

82
00:07:17,200 --> 00:07:22,360
Now if I save and refresh this
is in the center it looks great.

83
00:07:22,480 --> 00:07:29,830
Let's say zero to mastery because
our layout is looking really nice.

84
00:07:33,070 --> 00:07:34,440
And there you have it.

85
00:07:34,540 --> 00:07:36,810
That wasn't that bad, was it?

86
00:07:38,280 --> 00:07:39,460
I mean sure.

87
00:07:39,600 --> 00:07:47,819
The first time around that's kind of difficult but the
principles that I've showed you here can be transferred

88
00:07:47,820 --> 00:07:49,900
to a lot of websites.

89
00:07:49,950 --> 00:07:52,070
I mean this looks pretty ugly.

90
00:07:52,110 --> 00:07:58,559
You're not going to want to visit a website that looks
like this but when it comes to layout everything

91
00:07:58,560 --> 00:08:01,210
is responsive and nice, right?

92
00:08:01,320 --> 00:08:07,320
And you can imagine yourself expanding
on this and building a beautiful website.

93
00:08:07,440 --> 00:08:13,110
I wanted to show you this layout system because this
is what I would use if I was building a website.

94
00:08:13,650 --> 00:08:19,260
I would start off with the HTML and
create the layout that is responsive.

95
00:08:19,440 --> 00:08:24,659
Because after this all I really need
to do is add text, images and colors.

96
00:08:24,660 --> 00:08:30,430
Maybe some CSS styles to make it pretty
so that you can turn something like this.

97
00:08:30,810 --> 00:08:37,349
That doesn't look good but has the layout implemented
into something like this which I mean doesn't

98
00:08:37,350 --> 00:08:44,010
look that great yet but in the next video I want
to show you how because we have the layouts set up

99
00:08:44,670 --> 00:08:49,490
we can convert our base layout
project into something like this.

100
00:08:49,500 --> 00:08:51,350
And less than five minutes.

101
00:08:51,720 --> 00:08:53,150
So let's do that in the next video.

